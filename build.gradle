// Top-level build file where you can add configuration options common to all sub-projects/modules.
buildscript {
    ext.kotlin_version = '1.4.0'
    ext.detekt_version = '1.10.0'

    repositories {
        google()
        jcenter()
        gradlePluginPortal()
    }
    dependencies {
        classpath "com.android.tools.build:gradle:4.0.1"
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"

        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }
}

plugins {
    id 'com.github.ben-manes.versions' version '0.29.0'
    id 'org.jetbrains.kotlin.jvm' version "$kotlin_version" apply false
    id 'io.gitlab.arturbosch.detekt' version "$detekt_version" apply false
}

ext {
    androidModules = [
            'android-di',
            'app',
            'pokemon-list',
            'pokedex-di',
            'resources',
    ]

    kotlinModules = [
            'api',
            'domain',
            'tests',
            'usecase',
    ]
}

@SuppressWarnings(["unused", "GrMethodMayBeStatic"])
boolean isAndroidModule(Project project) {
    //boolean isAndroidLibrary = project.plugins.hasPlugin('com.android.library')
    //boolean isAndroidApp = project.plugins.hasPlugin('com.android.application')
    //return isAndroidLibrary || isAndroidApp
    return androidModules.contains(project.name)
}

@SuppressWarnings(["unused", "GrMethodMayBeStatic"])
boolean isKotlinModule(Project project) {
    //return project.plugins.hasPlugin('kotlin')
    return kotlinModules.contains(project.name)
}

apply from: "dependencies_check.gradle"

subprojects {
    apply from: "${rootProject.rootDir}/dependencies.gradle"
    apply from: "${rootProject.rootDir}/static_analysis.gradle"

    afterEvaluate { project ->
        project.apply from: "${rootProject.rootDir}/coverage.gradle"
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}