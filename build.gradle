// Top-level build file where you can add configuration options common to all sub-projects/modules.
buildscript {
    ext.kotlin_version = '1.5.0'
    ext.detekt_version = '1.14.2'

    repositories {
        google()
        mavenCentral()
        gradlePluginPortal()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:4.2.0'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"

        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }
}

plugins {
    id 'com.github.ben-manes.versions' version '0.36.0'
    id 'com.github.plnice.canidropjetifier' version '0.5'
    id 'org.jetbrains.kotlin.jvm' version "$kotlin_version" apply false
    id 'io.gitlab.arturbosch.detekt' version "$detekt_version" apply false
}

@SuppressWarnings(["unused"])
static boolean isAndroidModule(Project project) {
    //boolean isAndroidLibrary = project.plugins.hasPlugin('com.android.library')
    //boolean isAndroidApp = project.plugins.hasPlugin('com.android.application')
    //return isAndroidLibrary || isAndroidApp
    return project.hasProperty('moduleType') && project.moduleType == 'android'
}

@SuppressWarnings(["unused"])
static boolean isKotlinModule(Project project) {
    //return project.plugins.hasPlugin('kotlin')
    return project.hasProperty('moduleType') && project.moduleType == 'kotlin'
}

apply from: "gradle/dependencies_check.gradle"
apply from: "gradle/included_build.gradle"

subprojects {
    apply from: "${rootProject.rootDir}/gradle/dependencies.gradle"
    apply from: "${rootProject.rootDir}/gradle/static_analysis.gradle"

    afterEvaluate { project ->
        project.apply from: "${rootProject.rootDir}/gradle/coverage.gradle"
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}
